from aiogram import types
from aiogram.filters import Command
from database import ban_user, unban_user, get_user, update_user_verification
from config import ADMIN_ID

async def cmd_ban(message: types.Message):
    if message.from_user.id != ADMIN_ID:
        return

    try:
        user_id = int(message.text.split()[1])
        ban_user(user_id)
        await message.answer(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.")
    except (IndexError, ValueError):
        await message.answer("‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /ban <ID_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è>")

async def cmd_unban(message: types.Message):
    if message.from_user.id != ADMIN_ID:
        return

    try:
        user_id = int(message.text.split()[1])
        unban_user(user_id)
        await message.answer(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.")
    except (IndexError, ValueError):
        await message.answer("‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /unban <ID_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è>")

async def handle_verification_command(message: types.Message):
    if message.from_user.id != ADMIN_ID:
        return

    try:
        command_parts = message.text.split('_')
        if len(command_parts) != 2:
            await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã")
            return
            
        command_type = command_parts[0]
        user_id = int(command_parts[1])
        
        user = get_user(user_id)
        if not user:
            await message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
            
        if command_type == "/ver":
            update_user_verification(user_id, True)
            await message.bot.send_message(
                user_id,
                "üéâ *–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –ø—Ä–æ–π–¥–µ–Ω–∞!*\n\n"
                "–¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è –µ—Å—Ç—å **–†–ï–°–ü–ï–ö–¢** –æ—Ç –±–æ—Ç–∞! –¢—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–π –∫—Ä—É—Ç–æ–π —á–µ–ª! üî•\n"
                "–ü—Ä–æ–¥–æ–ª–∂–∞–π –æ–±—â–∞—Ç—å—Å—è, —Ç–µ–ø–µ—Ä—å —Ç—ã –≤ –æ—Å–æ–±–æ–º —Å–ø–∏—Å–∫–µ!\n\n"
                "P.S. –ï—Å–ª–∏ –ø–æ–∂–µ–ª–∞–µ—à—å –±–æ—Ç—É –∑–¥–æ—Ä–æ–≤—å—è - –ø–æ–ª—É—á–∏—à—å –¥–≤–æ–π–Ω–æ–π —Ä–µ—Å–ø–µ–∫—Ç! üòâ"
            )
            await message.answer(f"‚úÖ –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}!")
            
        elif command_type == "/dver":
            update_user_verification(user_id, False)
            await message.bot.send_message(
                user_id,
                "‚ùå *–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞*\n\n"
                "–≠–π, –Ω–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ! –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑, –º–æ–∂–µ—Ç –±—ã—Ç—å, –Ω—É–∂–Ω–æ –±—ã—Ç—å –ø–æ–≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–µ–µ?\n"
                "–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–π –æ–±—â–∞—Ç—å—Å—è –±–µ–∑ —Ä–µ—Å–ø–µ–∫—Ç–∞ - —è –≤—Å–µ —Ä–∞–≤–Ω–æ –∫—Ä—É—Ç–æ–π –±–æ—Ç! üòé"
            )
            await message.answer(f"‚ùå –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        else:
            await message.answer("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")
            
    except (IndexError, ValueError):
        await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã")

async def cmd_stats(message: types.Message):
    if message.from_user.id != ADMIN_ID:
        return
        
    await message.answer("üìä –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–æ—Å—Ç—É–ø–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π /ban –∏ /unban")